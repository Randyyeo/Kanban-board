{"remainingRequest":"/Users/randallyeo/Desktop/Desktop Items/My Own Programming/vue/Kanban-board/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/randallyeo/Desktop/Desktop Items/My Own Programming/vue/Kanban-board/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/randallyeo/Desktop/Desktop Items/My Own Programming/vue/Kanban-board/src/App.vue","mtime":1637577501524},{"path":"/Users/randallyeo/Desktop/Desktop Items/My Own Programming/vue/Kanban-board/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/randallyeo/Desktop/Desktop Items/My Own Programming/vue/Kanban-board/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/randallyeo/Desktop/Desktop Items/My Own Programming/vue/Kanban-board/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/randallyeo/Desktop/Desktop Items/My Own Programming/vue/Kanban-board/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/randallyeo/Desktop/Desktop Items/My Own Programming/vue/Kanban-board/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5rYW5iYW4tY29sdW1uIHsKICBtaW4taGVpZ2h0OiAzMDBweDsKfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwaA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div class=\"container mt-5\">\n    <h1 class=\"text-center\">Kanban Board</h1>\n    <div class=\"row mt-5\">\n      <div class=\"col d-flex justify-content-end\">\n        <button\n          v-if=\"!add_status\"\n          class=\"btn btn-primary float-right\"\n          @click=\"add_status = true\"\n        >\n          Add extra board\n        </button>\n        <div v-if=\"add_status\" class=\"d-flex\">\n          <input\n            type=\"text\"\n            v-model=\"name\"\n            placeholder=\"Name\"\n            class=\"form-control\"\n          />\n          <button class=\"btn btn-primary ms-2\" @click=\"addBoard\">Add</button>\n        </div>\n      </div>\n    </div>\n    <div>\n      <p class=\"text-danger\" v-if=\"error\">Error has occurred</p>\n      <div\n        class=\"row my-5 border border-2 rounded-2\"\n        v-for=\"(arr, index) in arrArrays\"\n        :key=\"index\"\n      >\n        <h1>\n          {{ index }}\n          <i\n            style=\"cursor: pointer; font-size: 25px\"\n            @click=\"modelArr[index].updateTitle = true\"\n            class=\"fas fa-edit\"\n          ></i>\n        </h1>\n        <div class=\"d-flex mb-3 w-50\" v-if=\"modelArr[index].updateTitle\">\n          <input type=\"text\" placeholder=\"Update Board Name\" v-model=\"newName\" class=\"form-control\" />\n          <button class=\"btn btn-primary ms-2\" @click=\"update(index)\">\n            Update\n          </button>\n        </div>\n        <h3>{{arr.desc}} <i\n            style=\"cursor: pointer; font-size: 25px\"\n            @click=\"modelArr[index].updateDesc = true\"\n            class=\"fas fa-edit\"\n          ></i></h3>\n        <div class=\"d-flex mb-3 w-50\" v-if=\"modelArr[index].updateDesc\">\n          <input type=\"text\" placeholder=\"Update Board Description\" v-model=\"newDesc\" class=\"form-control\" />\n          <button class=\"btn btn-primary ms-2\" @click=\"updateDesc(index)\">\n            Update\n          </button>\n        </div>\n\n        <div class=\"row mb-3\">\n          <div class=\"col-md-6 col-lg-4 d-flex\">\n            <button\n              type=\"button\"\n              class=\"btn btn-primary\"\n              data-bs-toggle=\"modal\"\n              :data-bs-target=\"'#exampleModal' + index\"\n            >\n              Add Task\n            </button>\n\n            <!-- Modal -->\n            <div\n              class=\"modal fade\"\n              :id=\"'exampleModal' + index\"\n              tabindex=\"-1\"\n              role=\"dialog\"\n              aria-labelledby=\"exampleModalLabel\"\n              aria-hidden=\"true\"\n            >\n              <div class=\"modal-dialog\" role=\"document\">\n                <div class=\"modal-content\">\n                  <div class=\"modal-header\">\n                    <h5 class=\"modal-title\" id=\"exampleModalLabel\">\n                      Modal title\n                    </h5>\n                  </div>\n                  <div class=\"modal-body\">\n                    <label class=\"form-label\">Add to which column</label>\n                    <select\n                      class=\"form-select mb-3\"\n                      aria-label=\"Default select example\"\n                      v-model=\"modelArr[index].select\"\n                    >\n                      <option\n                        :value=\"index1\"\n                        v-for=\"(sub, index1) in arr.cols\"\n                        :key=\"index1\"\n                      >\n                        {{ index1 }}\n                      </option>\n                    </select>\n                    <label class=\"form-label\">Task Name</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      v-model=\"modelArr[index].taskName\"\n                    />\n                    <label class=\"form-label\">Task Description</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      v-model=\"modelArr[index].taskDescription\"\n                    />\n                  </div>\n                  <div class=\"modal-footer\">\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-secondary\"\n                      data-bs-dismiss=\"modal\"\n                    >\n                      Close\n                    </button>\n                    <button\n                      data-bs-dismiss=\"modal\"\n                      type=\"button\"\n                      @click=\"addTask(index)\"\n                      class=\"btn btn-primary\"\n                    >\n                      Add\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <button\n              type=\"button\"\n              class=\"btn btn-primary ms-2\"\n              data-bs-toggle=\"modal\"\n              :data-bs-target=\"'#exampleModal1' + index\"\n            >\n              Add Column\n            </button>\n\n            <!-- Modal -->\n            <div\n              class=\"modal fade\"\n              :id=\"'exampleModal1' + index\"\n              tabindex=\"-1\"\n              role=\"dialog\"\n              aria-labelledby=\"exampleModalLabel\"\n              aria-hidden=\"true\"\n            >\n              <div class=\"modal-dialog\" role=\"document\">\n                <div class=\"modal-content\">\n                  <div class=\"modal-header\">\n                    <h5 class=\"modal-title\" id=\"exampleModalLabel\">\n                      Modal title\n                    </h5>\n                  </div>\n                  <div class=\"modal-body\">\n                    <label class=\"form-label\">Number of maximum cards</label>\n                    <input\n                      type=\"number\"\n                      class=\"form-control\"\n                      v-model=\"modelArr[index].numberMax\"\n                    />\n                    <label class=\"form-label\">Column Name</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      v-model=\"modelArr[index].colName\"\n                    />\n                  </div>\n                  <div class=\"modal-footer\">\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-secondary\"\n                      data-bs-dismiss=\"modal\"\n                    >\n                      Close\n                    </button>\n                    <button\n                      data-bs-dismiss=\"modal\"\n                      type=\"button\"\n                      @click=\"addCol(index)\"\n                      class=\"btn btn-primary\"\n                    >\n                      Add\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div\n          class=\"col-md-6 col-lg-4\"\n          v-for=\"(sub, index1) in arr.cols\"\n          :key=\"index1\"\n        >\n          <div class=\"p-2 alert alert-secondary\">\n            <h3>{{ index1 }}</h3>\n            <!-- Backlog draggable component. Pass arrBackLog to list prop -->\n            <draggable\n              class=\"list-group kanban-column\"\n              :list=\"sub.list\"\n              group=\"tasks\"\n              :move=\"checkMove\"\n              @start=\"onStart\"\n              @end=\"onEnd\"\n            >\n              <div\n                class=\"card w-100 mb-3\"\n                v-for=\"(element, index2) in sub.list\"\n                :key=\"element.name\"\n                style=\"width: 18rem\"\n              >\n                <div class=\"card-body\">\n                  <div class=\"card-title d-flex justify-content-between\">\n                    <h5>{{ element.name }}</h5>\n                    <i\n                      @click=\"remove(index, index1, index2)\"\n                      style=\"font-size: 24px; cursor: pointer\"\n                      class=\"fas fa-times\"\n                    ></i>\n                  </div>\n                  <p class=\"card-text\">\n                    {{ element.description }}\n                  </p>\n                </div>\n                <div class=\"card-footer\" v-if=\"element.date\">\n                  Date Added: {{ element.date }}\n                </div>\n              </div>\n            </draggable>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//import draggable\nimport draggable from \"vuedraggable\";\n\nexport default {\n  components: {\n    //import draggable as a component\n    draggable,\n  },\n  data() {\n    return {\n      // for new tasks\n      newDesc: null,\n      newName: null,\n      name: null,\n      error: false,\n      \n      add_status: false,\n      max: 4,\n      newTask: \"\",\n      // 4 arrays to keep track of our 4 statuses\n      modelArr: {\n        Tasks: {\n          updateTitle: false,\n          updateDesc: false,\n          select: null,\n          taskName: null,\n          taskDescription: null,\n          colName: null,\n          numberMax: null,\n        },\n      },\n      arrArrays: {\n        Tasks: {\n          desc: \"Tasks that are outstanding\",\n          cols: {\n            ToDo: {\n              max: 4,\n              list: [\n                { name: \"Code Sign Up Page\", date: \"\", description: \"\" },\n                { name: \"Test Dashboard\", date: \"\", description: \"\" },\n                { name: \"Style Registration\", date: \"\", description: \"\" },\n                { name: \"Help with Designs\", date: \"\", description: \"\" },\n              ],\n            },\n            InProgress: { max: 2, list: [] },\n            Done: { max: 4, list: [] },\n          },\n        },\n      },\n      length: null,\n      initialIndex: null,\n      inititalCol: null,\n      afterIndex: null,\n      afterCol: null,\n      initialposition: null,\n      afterposition: null,\n    };\n  },\n  watch: {\n    arrArrays: {\n      // This will let Vue know to look inside the array\n      deep: true,\n\n      // We have to move our method to a handler field\n      handler() {\n        console.log(\"The list of colours has changed!\");\n        return this.arrArrays;\n      },\n    },\n  },\n  methods: {\n    update(index) {\n      var newname = this.newName;\n      delete Object.assign(this.arrArrays, {\n        [newname]: this.arrArrays[index],\n      })[index];\n      this.modelArr[index].updateTitle = false;\n      delete Object.assign(this.modelArr, { [newname]: this.modelArr[index] })[\n        index\n      ];\n      this.newName = \"\";\n    },\n    updateDesc(index) {\n      var newname = this.newDesc;\n      this.arrArrays[index].desc = newname;\n      this.newDesc = \"\"\n      this.modelArr[index].updateDesc = false;\n    },\n    remove(index, index1, index2) {\n      var list = this.arrArrays[index][index1][\"list\"];\n      for (var i = 0; i < list.length; i++) {\n        if (i === index2) {\n          list.splice(i, 1);\n        }\n      }\n\n      this.arrArrays[index][index1][\"list\"] = list;\n      console.log(this.arrArrays);\n    },\n    addTask(index) {\n      if (this.modelArr[index].select && this.modelArr[index].taskName) {\n        var date = new Date();\n        date = String(date).substring(4, 15);\n        console.log(this.arrArrays);\n        var list = this.arrArrays[index][this.modelArr[index].select].list;\n        list.push({\n          name: this.modelArr[index].taskName,\n          date,\n          description: this.modelArr[index].taskDescription,\n        });\n        this.$set(\n          this.arrArrays[index][this.modelArr[index].select],\n          \"list\",\n          list\n        );\n        console.log(this.arrArrays);\n      }\n      this.modelArr[index].select = \"\";\n      this.modelArr[index].taskName = \"\";\n      this.modelArr[index].taskDescription = \"\";\n    },\n    addBoard() {\n      this.$set(this.arrArrays, this.name, {});\n      this.$set(this.modelArr, this.name, {\n        updateTitle: false,\n        updateDesc: false,\n        select: null,\n        taskName: null,\n        taskDescription: null,\n        colName: null,\n        numberMax: null,\n      });\n      this.add_status = false;\n      this.name = \"\";\n    },\n    addCol(index) {\n      this.$set(this.arrArrays[index], this.modelArr[index].colName, {\n        max: this.modelArr[index].numberMax,\n        list: [],\n      });\n\n      this.modelArr[index][\"colName\"] = null;\n      this.modelArr[index][\"numberMax\"] = null;\n    },\n    onStart(moved) {\n      var col = moved.to.parentNode.getElementsByTagName(\"h3\")[0].innerText;\n\n      var index =\n        moved.to.parentNode.parentNode.parentNode.getElementsByTagName(\"h1\")[0]\n          .innerText;\n      this.initialIndex = index;\n      this.inititalCol = col;\n    },\n    onEnd(moved) {\n      var col = moved.to.parentNode.getElementsByTagName(\"h3\")[0].innerText;\n\n      var index =\n        moved.to.parentNode.parentNode.parentNode.getElementsByTagName(\"h1\")[0]\n          .innerText;\n\n      this.max = this.arrArrays[index][col].max;\n      if (this.arrArrays[index][col].list.length > this.max) {\n        var remove = this.arrArrays[index][col].list.splice(\n          this.afterposition,\n          1\n        );\n        console.log(remove);\n        this.arrArrays[this.initialIndex][this.inititalCol].list.splice(\n          this.initialposition,\n          0,\n          { name: remove[0].name, date: remove[0].date }\n        );\n        console.log(this.arrArrays);\n      }\n    },\n    checkMove(evt) {\n      this.initialposition = evt.draggedContext.index;\n      this.afterposition = evt.draggedContext.futureIndex;\n    },\n  },\n};\n</script>\n\n<style>\n.kanban-column {\n  min-height: 300px;\n}\n</style>\n"]}]}