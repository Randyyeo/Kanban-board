{"remainingRequest":"/Users/randallyeo/Desktop/Desktop Items/My Own Programming/vue/Kanban-board/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/randallyeo/Desktop/Desktop Items/My Own Programming/vue/Kanban-board/src/App.vue?vue&type=template&id=7ba5bd90&","dependencies":[{"path":"/Users/randallyeo/Desktop/Desktop Items/My Own Programming/vue/Kanban-board/src/App.vue","mtime":1637722197789},{"path":"/Users/randallyeo/Desktop/Desktop Items/My Own Programming/vue/Kanban-board/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/randallyeo/Desktop/Desktop Items/My Own Programming/vue/Kanban-board/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/randallyeo/Desktop/Desktop Items/My Own Programming/vue/Kanban-board/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/randallyeo/Desktop/Desktop Items/My Own Programming/vue/Kanban-board/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}